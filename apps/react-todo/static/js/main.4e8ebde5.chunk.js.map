{"version":3,"sources":["components/form/Form.js","components/todo/Todo.js","components/todoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","status","className","onSubmit","e","preventDefault","isCompleted","text","id","Math","random","type","onChange","target","value","name","Todo","todo","onClick","map","it","filter","ele","TodoList","filteredTodos","App","useState","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e8ebde5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Form({ setInputText, todos, setTodos, inputText, status, setStatus }) {\n  const handleInputKeyPress = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    setTodos([\n      ...todos,\n      {\n        isCompleted: false,\n        text: inputText,\n        id: Math.random() * 1000,\n      },\n    ]);\n\n    setInputText(\"\");\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  };\n  return (\n    <form className=\"form\" onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        className=\"todo-input\"\n        onChange={handleInputKeyPress}\n        value={inputText}\n      />\n      <button className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction Todo({ todo, todos, setTodos }) {\n  const trashHandler = () => {\n    setTodos(\n      todos.filter((ele) => {\n        return ele.id !== todo.id;\n      })\n    );\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map((it) => {\n        if (it.id === todo.id) {\n          return { ...it, isCompleted: !it.isCompleted };\n        } else {\n          return it;\n        }\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}>\n        {todo.text}\n      </li>\n      <button className=\"complete-btn\" onClick={completeHandler}>\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button className=\"trash-btn\" onClick={trashHandler}>\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"../todo/Todo\";\n\nfunction TodoList({ todos, setTodos,filteredTodos }) {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => {\n          return <Todo key={todo.id} todo={todo} setTodos={setTodos} todos={todos}/>;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport Form from \"./components/form/Form\";\nimport TodoList from \"./components/todoList/TodoList\";\n\nfunction App() {\n  // state\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n\n  //handlers and other functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(\n          todos.filter((todo) => {\n            return todo.isCompleted === true;\n          })\n        );\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(\n          todos.filter((todo) => {\n            return todo.isCompleted === false;\n          })\n        );\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveToLocal = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") == null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  };\n\n  // run effect just once\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  // effects\n  useEffect(() => {\n    filterHandler();\n    saveToLocal();\n  }, [status, todos]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Malkit's Todo List</h1>\n      </header>\n      <Form\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        status={status}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}